#!/bin/sh

CC=gcc
LD=ld
INCLUDEDIR=../kernel/include
OUTFILE=Makefile
OBJPREFIX="objects"
DEBUG=0

if [ $DEBUG == 1 ]
then
	DEFS="-g3"
	OPT=0
else
	DEFS=""
	OPT=2
fi

C_ARGS="$DEFS -I$INCLUDEDIR -O$OPT -m32 -c -nostartfiles -ffreestanding -fno-common -Wall -Wswitch-enum -Werror -fno-ident -fno-stack-protector -mpreferred-stack-boundary=2"

C_DIRS="standard
debug
string
memory
kdisplay
miscellaneous
rmi
math
hash
tdm
drivers/dmesg
threads"

echo -e " ========== GENERATING MAKEFILE ============"
echo -e " include dir: $INCLUDEDIR"
echo -e " CC args: $C_ARGS"
echo -e " =========================================="

echo -e "# NURNware Ray kernel modules">$OUTFILE
echo -e "# (For use with Cold iGnition operating system)">>$OUTFILE
echo -e "# Copyright (C) 2007 - NURNware Technologies">>$OUTFILE
echo -e "\n">>$OUTFILE

# Variables
echo -e "CC=$CC">>$OUTFILE
echo -e "C_ARGS=$C_ARGS">>$OUTFILE
echo -e "LD=$LD">>$OUTFILE
echo -e "\n">>$OUTFILE

echo -e "all: modules">>$OUTFILE
echo -e "\n">>$OUTFILE

echo -e "clean:">>$OUTFILE
echo -e "\t@-rm \`find . -iname '*.o'\`">>$OUTFILE
echo -e "\n">>$OUTFILE

echo -e "rebuild: clean modules">>$OUTFILE
echo -e "\n">>$OUTFILE


CFILES=0
ISERR=0
for CURDIR in $C_DIRS
do
    for CURFILE in $CURDIR/*.[cS]
    do
	if [ $ISERR == "0" ]
	then
		if [[ "$CURFILE" = *.c ]]
		then
			OBJFILE=${CURFILE%.c}.o
		else
			if [[ "$CURFILE" = *.S ]]
			then
				OBJFILE=${CURFILE%.S}.o
			else
				OBJFILE=""
			fi
		fi
		echo -e "\t Getting headers for $CURFILE..."
		HEADERS=`$CC $C_ARGS $CURFILE -M -MT $OBJFILE`
    		if [ $? != "0" ]
		then
		    ISERR=1
		fi

		echo -e "$HEADERS">>$OUTFILE
		echo -e "\t@echo -e \"MODULE [$CURFILE]\"">>$OUTFILE
		echo -e "\t@\$(CC) \$(C_ARGS) $CURFILE -o $OBJFILE">>$OUTFILE
		echo -e "\n">>$OUTFILE

		ALLFILES="$ALLFILES $CURFILE"
		OBJECTS="$OBJECTS $OBJFILE"

	else
	    echo -e "Aborting $CURFILE due to errors."
	fi

	CFILES=`expr $CFILES + 1`
    done
done

echo -e "Generating linker entry..."
echo -e "modules: $OBJECTS">>$OUTFILE

if [ $ISERR == "0" ]
then
	echo -e "Makefile built successfully."
else
	echo -e "There were errors generating the Makefile!"
fi
